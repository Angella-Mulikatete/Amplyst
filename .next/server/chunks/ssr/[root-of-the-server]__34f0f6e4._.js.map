{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/amplyst-campaign-flow/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport type { User, UserRole } from '../types';\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface AuthContextType {\r\n  currentUser: User | null;\r\n  currentRole: UserRole | null;\r\n  login: (email: string, role: UserRole) => void;\r\n  signup: (email: string, name: string, role: UserRole) => void;\r\n  logout: () => void;\r\n  switchRole: (role: UserRole) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [currentRole, setCurrentRole] = useState<UserRole | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulate loading user from storage\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    const storedRole = localStorage.getItem('currentRole') as UserRole;\r\n    if (storedUser && storedRole) {\r\n      setCurrentUser(JSON.parse(storedUser));\r\n      setCurrentRole(storedRole);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (email: string, role: UserRole) => {\r\n    const user: User = { id: Date.now().toString(), email, role, name: email.split('@')[0] };\r\n    setCurrentUser(user);\r\n    setCurrentRole(role);\r\n    localStorage.setItem('currentUser', JSON.stringify(user));\r\n    localStorage.setItem('currentRole', role as string);\r\n  };\r\n\r\n  const signup = (email: string, name: string, role: UserRole) => {\r\n    // In a real app, this would involve an API call\r\n    const user: User = { id: Date.now().toString(), email, name, role };\r\n    setCurrentUser(user);\r\n    setCurrentRole(role);\r\n    localStorage.setItem('currentUser', JSON.stringify(user));\r\n    localStorage.setItem('currentRole', role as string);\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setCurrentRole(null);\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('currentRole');\r\n  };\r\n\r\n  const switchRole = (role: UserRole) => {\r\n    if (currentUser && role) {\r\n      const updatedUser = { ...currentUser, role };\r\n      setCurrentUser(updatedUser);\r\n      setCurrentRole(role);\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n      localStorage.setItem('currentRole', role);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, currentRole, login, signup, logout, switchRole, isLoading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAeA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC5D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAChE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qCAAqC;QACrC,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,cAAc,YAAY;YAC5B,eAAe,KAAK,KAAK,CAAC;YAC1B,eAAe;QACjB;QACA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC,OAAe;QAC5B,MAAM,OAAa;YAAE,IAAI,KAAK,GAAG,GAAG,QAAQ;YAAI;YAAO;YAAM,MAAM,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;QAAC;QACvF,eAAe;QACf,eAAe;QACf,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;QACnD,aAAa,OAAO,CAAC,eAAe;IACtC;IAEA,MAAM,SAAS,CAAC,OAAe,MAAc;QAC3C,gDAAgD;QAChD,MAAM,OAAa;YAAE,IAAI,KAAK,GAAG,GAAG,QAAQ;YAAI;YAAO;YAAM;QAAK;QAClE,eAAe;QACf,eAAe;QACf,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;QACnD,aAAa,OAAO,CAAC,eAAe;IACtC;IAEA,MAAM,SAAS;QACb,eAAe;QACf,eAAe;QACf,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;IAC1B;IAEA,MAAM,aAAa,CAAC;QAClB,IAAI,eAAe,MAAM;YACvB,MAAM,cAAc;gBAAE,GAAG,WAAW;gBAAE;YAAK;YAC3C,eAAe;YACf,eAAe;YACf,aAAa,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC;YACnD,aAAa,OAAO,CAAC,eAAe;QACtC;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAa;YAAa;YAAO;YAAQ;YAAQ;YAAY;QAAU;kBACnG;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/amplyst-campaign-flow/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/amplyst-campaign-flow/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}}]
}